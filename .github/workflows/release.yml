name: Auto Release

on:
  push:
    branches:
      - main
      
permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Read and bump version
      id: version
      run: |
        # Lire la version actuelle
        version=$(node -e "console.log(require('./vertion.json').vertion)")
        echo "Current version: $version"
        
        # Séparer en majeur et mineur
        IFS='.' read -r major minor <<< "$version"
        
        # Incrémenter le mineur
        minor=$((minor + 1))
        
        # Si le mineur > 99, reset à 0 et incrémenter le majeur
        if [ $minor -gt 99 ]; then
          minor=0
          major=$((major + 1))
        fi
        
        new_version="$major.$minor"
        echo "New version: $new_version"
        
        # Mettre à jour vertion.json
        node -e "const fs = require('fs'); const data = {vertion:'$new_version'}; fs.writeFileSync('vertion.json', JSON.stringify(data, null, 2));"

        # Exporter la version pour les steps suivants
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Commit new version
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add vertion.json
        git commit -m "Bump version to ${{ env.new_version }}" || echo "No changes to commit"
        git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:main

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.new_version }}
        name: ${{ env.new_version }}
        draft: false
        prerelease: false
